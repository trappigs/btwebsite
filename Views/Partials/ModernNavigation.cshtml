@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
    var rootNode = Model.Root();
    var children = rootNode.Children().Where(x => x.IsVisible());
}

<link rel="stylesheet" href="/css/modern-navigation.css">
<nav class="modern-nav">
    <div class="nav-container">
        <!-- Logo Section -->
        <div class="nav-logo">
            <a href="/" class="logo-link">
                <div class="logo-circle">
                    <span class="logo-initials">BT</span>
                </div>
                <span class="logo-text">BEREKETLİ TOPRAKLAR</span>
            </a>
        </div>

        <!-- Main Navigation Menu -->
        <div class="nav-menu">
            <!-- Kurumsal Dropdown -->
            <div class="nav-dropdown">
                <a href="#" class="nav-item dropdown-toggle">
                    Kurumsal
                    <svg class="dropdown-icon" width="10" height="6" viewBox="0 0 10 6" fill="none">
                        <path d="M1 1L5 5L9 1" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </a>
                <div class="dropdown-menu">
                    <a href="/biz-kimiz" class="dropdown-item">Biz Kimiz ?</a>
                    <a href="/neden-bereketli-topraklar" class="dropdown-item">Neden Bereketli Topraklar</a>
                    <a href="/vizyonumuz" class="dropdown-item">Vizyonumuz</a>
                    <a href="/ekibimiz" class="dropdown-item">Ekibimiz</a>
                </div>
            </div>

            <!-- Projelerimiz -->
            <a href="/projeler" class="nav-item">Projelerimiz</a>

            <!-- Hizmetlerimiz -->
            <a href="/ekibimiz" class="nav-item">Ekibimiz</a>

            <!-- Bilgi Bankası Dropdown -->
            <div class="nav-dropdown">
                <a href="#" class="nav-item dropdown-toggle">
                    Bilgi Bankası
                    <svg class="dropdown-icon" width="10" height="6" viewBox="0 0 10 6" fill="none">
                        <path d="M1 1L5 5L9 1" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                </a>
                <div class="dropdown-menu">
                    <a href="/sss" class="dropdown-item">Sıkça Sorulan Sorular</a>
                    <a href="/blog" class="dropdown-item">Blog</a>
                    <a href="/haberler" class="dropdown-item">Haberler</a>
                </div>
            </div>

            <!-- Bize Ulaşın -->
            <a href="/iletisim" class="nav-item">Bize Ulaşın</a>
        </div>

        <!-- Right Side Actions -->
        <div class="nav-actions">
            <!-- Language Switcher -->
            <div class="language-switcher">
                <a href="#" class="lang-item active">TR</a>
                <span class="lang-divider">|</span>
                <a href="#" class="lang-item">ENG</a>
            </div>

            <a href="tel:02244324959" class="phone-btn btn-nina" data-text="0224 432 49 59">
    <i class="fas fa-phone-alt"></i>
    <span class="pxl--btn-text">
        <span>0</span><span>2</span><span>2</span><span>4</span><span class="spacer">&nbsp;</span><span>4</span><span>3</span><span>2</span><span class="spacer">&nbsp;</span><span>4</span><span>9</span><span class="spacer">&nbsp;</span><span>5</span><span>9</span>
    </span>
</a>
</a>

            <!-- Mobile Menu Toggle -->
            <button class="mobile-menu-btn" aria-label="Toggle mobile menu">
                <span></span>
                <span></span>
                <span></span>
            </button>
        </div>
    </div>
    
    <!-- Mobile Menu Overlay -->
    <div class="mobile-menu-overlay"></div>
    
    <!-- Mobile Menu -->
    <div class="mobile-menu">
        <div class="mobile-menu-header">
            <div class="mobile-logo">
                <div class="logo-circle">
                    <span class="logo-initials">BT</span>
                </div>
                <span class="logo-text">BEREKETLİ TOPRAKLAR</span>
            </div>
            <button class="mobile-close-btn" aria-label="Close mobile menu">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                    <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            </button>
        </div>
        <div class="mobile-menu-content">
            <!-- Mobile menu items will be populated by JavaScript -->
        </div>
    </div>
    
</nav>


<script>

// Modern Navigation JavaScript
document.addEventListener('DOMContentLoaded', function() {
    // Elements
    const nav = document.querySelector('.modern-nav');
    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    const mobileMenu = document.querySelector('.mobile-menu');
    const mobileMenuOverlay = document.querySelector('.mobile-menu-overlay');
    const mobileCloseBtn = document.querySelector('.mobile-close-btn');
    const body = document.body;

    // Scroll Effect
    let lastScrollTop = 0;
    const scrollThreshold = 50;

    window.addEventListener('scroll', function() {
        const currentScroll = window.pageYOffset || document.documentElement.scrollTop;

        // Add/remove scrolled class
        if (currentScroll > scrollThreshold) {
            nav.classList.add('scrolled');
        } else {
            nav.classList.remove('scrolled');
        }

        // Hide/show nav on scroll
        if (currentScroll > lastScrollTop && currentScroll > 100) {
            // Scrolling down
            nav.style.transform = 'translateY(-100%)';
        } else {
            // Scrolling up
            nav.style.transform = 'translateY(0)';
        }

        lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;
    });

    // Mobile Menu
    function openMobileMenu() {
        mobileMenu.classList.add('active');
        mobileMenuOverlay.classList.add('active');
        body.style.overflow = 'hidden';
        
        // Animate hamburger to X
        const spans = mobileMenuBtn.querySelectorAll('span');
        spans[0].style.transform = 'rotate(45deg) translateY(6px)';
        spans[1].style.opacity = '0';
        spans[2].style.transform = 'rotate(-45deg) translateY(-6px)';
    }

    function closeMobileMenu() {
        mobileMenu.classList.remove('active');
        mobileMenuOverlay.classList.remove('active');
        body.style.overflow = '';
        
        // Animate X back to hamburger
        const spans = mobileMenuBtn.querySelectorAll('span');
        spans[0].style.transform = 'none';
        spans[1].style.opacity = '1';
        spans[2].style.transform = 'none';
    }

    // Event Listeners
    if (mobileMenuBtn) {
        mobileMenuBtn.addEventListener('click', openMobileMenu);
    }

    if (mobileCloseBtn) {
        mobileCloseBtn.addEventListener('click', closeMobileMenu);
    }

    if (mobileMenuOverlay) {
        mobileMenuOverlay.addEventListener('click', closeMobileMenu);
    }

    // Clone menu items to mobile menu
    function cloneMenuToMobile() {
        const mobileMenuContent = document.querySelector('.mobile-menu-content');
        const navMenu = document.querySelector('.nav-menu');
        
        if (mobileMenuContent && navMenu) {
            // Clear existing content
            mobileMenuContent.innerHTML = '';
            
            // Clone each nav item
            const navItems = navMenu.querySelectorAll('.nav-item, .nav-dropdown');
            
            navItems.forEach(item => {
                if (item.classList.contains('nav-dropdown')) {
                    // Handle dropdown
                    const dropdown = document.createElement('div');
                    dropdown.className = 'mobile-dropdown';
                    
                    const toggle = item.querySelector('.dropdown-toggle').cloneNode(true);
                    toggle.className = 'mobile-dropdown-toggle';
                    
                    const dropdownContent = document.createElement('div');
                    dropdownContent.className = 'mobile-dropdown-content';
                    
                    const dropdownItems = item.querySelectorAll('.dropdown-item');
                    dropdownItems.forEach(dropItem => {
                        const clonedItem = dropItem.cloneNode(true);
                        clonedItem.className = 'mobile-nav-item sub-item';
                        dropdownContent.appendChild(clonedItem);
                    });
                    
                    dropdown.appendChild(toggle);
                    dropdown.appendChild(dropdownContent);
                    mobileMenuContent.appendChild(dropdown);
                    
                    // Add toggle functionality
                    toggle.addEventListener('click', function(e) {
                        e.preventDefault();
                        dropdown.classList.toggle('active');
                    });
                } else {
                    // Regular nav item
                    const clonedItem = item.cloneNode(true);
                    clonedItem.className = 'mobile-nav-item';
                    mobileMenuContent.appendChild(clonedItem);
                }
            });
            
            // Add language switcher and phone
            const mobileActions = document.createElement('div');
            mobileActions.className = 'mobile-actions';
            mobileActions.innerHTML = `
                <div class="mobile-language">
                    <a href="#" class="mobile-lang-item active">TR</a>
                    <span class="lang-divider">|</span>
                    <a href="#" class="mobile-lang-item">ENG</a>
                </div>
                <a href="tel:4445675" class="mobile-phone">
                    <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                        <path d="M15 11.5C15 11.82 14.93 12.15 14.78 12.46C14.63 12.77 14.43 13.06 14.16 13.33C13.72 13.78 13.23 14.1 12.66 14.3C12.1 14.5 11.49 14.6 10.83 14.6C9.86 14.6 8.82 14.36 7.72 13.87C6.62 13.38 5.52 12.72 4.43 11.89C3.33 11.05 2.29 10.11 1.3 9.06C0.32 8.01 0.45 6.98 0.69 5.98C0.93 4.97 1.3 3.97 1.8 3C2.09 2.44 2.5 1.95 3.03 1.53C3.56 1.1 4.14 0.9 4.78 0.9C5.02 0.9 5.26 0.95 5.48 1.05C5.71 1.15 5.92 1.3 6.09 1.51L7.77 3.91C7.94 4.11 8.07 4.29 8.17 4.46C8.27 4.62 8.32 4.78 8.32 4.92C8.32 5.1 8.25 5.28 8.11 5.45C7.98 5.62 7.79 5.8 7.55 5.98L6.94 6.62C6.86 6.7 6.82 6.79 6.82 6.91C6.82 6.97 6.83 7.02 6.85 7.08C6.88 7.14 6.91 7.19 6.93 7.24C7.1 7.54 7.39 7.94 7.8 8.43C8.22 8.92 8.67 9.42 9.15 9.91C9.65 10.4 10.14 10.86 10.64 11.29C11.13 11.71 11.53 11.99 11.84 12.16C11.88 12.18 11.93 12.21 11.99 12.24C12.05 12.27 12.11 12.28 12.18 12.28C12.31 12.28 12.4 12.23 12.48 12.15L13.09 11.55C13.28 11.36 13.46 11.18 13.63 11.05C13.8 10.91 13.97 10.84 14.16 10.84C14.3 10.84 14.45 10.88 14.62 10.98C14.79 11.08 14.97 11.21 15.17 11.38L17.6 13.09C17.81 13.26 17.96 13.46 18.06 13.69C18.15 13.92 18.2 14.15 18.2 14.4" stroke="var(--nav-primary)" stroke-width="1.5" stroke-miterlimit="10"/>
                    </svg>
                    <span>444 5 675</span>
                </a>
            `;
            mobileMenuContent.appendChild(mobileActions);
        }
    }

    // Initialize mobile menu
    cloneMenuToMobile();

    // Handle resize
    let resizeTimer;
    window.addEventListener('resize', function() {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function() {
            if (window.innerWidth > 768 && mobileMenu.classList.contains('active')) {
                closeMobileMenu();
            }
        }, 250);
    });

    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });

    // Language switcher
    document.querySelectorAll('.lang-item, .mobile-lang-item').forEach(lang => {
        lang.addEventListener('click', function(e) {
            e.preventDefault();
            
            // Remove active from all
            document.querySelectorAll('.lang-item, .mobile-lang-item').forEach(l => {
                l.classList.remove('active');
            });
            
            // Add active to clicked
            this.classList.add('active');
            
            // Here you can add language change logic
            const selectedLang = this.textContent;
            console.log('Language changed to:', selectedLang);
        });
    });
});


</script>